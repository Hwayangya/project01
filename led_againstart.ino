// 게임이 끝나는 후에 화면 송출 
#include <Adafruit_GFX.h>   // Core graphics library
#include <P3RGB64x32MatrixPanel.h>
#include <string>

P3RGB64x32MatrixPanel matrix(25, 26, 27, 21, 22, 0, 15, 32, 33, 12, 5, 23, 4);

const uint16_t image[28][28] = {
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0x0000},
    {0x0000,  0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x8410,	0x0000,	0x8410,	0x0000,	0x8410,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x0000,	0xFFFF,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0xFFFF,	0x0000},
    {0x0000,  0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x8410,	0x8410,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x8410,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0xFFFF,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x8410,	0x8410,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x4444,	0x8410,	0x8410,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x4444,	0x0000,	0x4444,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x4444,	0x0000,	0x4444,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x4444,	0x0000,	0x4444,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000},
    {0x0000,	0x0000,	0x0000,	0x0000,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x8410,	0x8410,	0x8410,	0x8410,	0x8410,	0x0000,	0x0000,	0x0000,	0x0000,	0xFFFF,	0x0000,	0x0000,	0x8410,	0x0000,	0x0000,	0xFFFF,	0x0000}

};


void setup() {
  matrix.begin();
}

void drawText(const char* text, int startX, int startY, int textSize) {
    matrix.setTextColor(matrix.colorHSV(0, 255, 255)); // 글자 빨강 color
    matrix.setTextSize(textSize);
    int x = startX;
    int y = startY;

    for (int i = 0; text[i] != '\0'; i++) {
        if (text[i] == ' ') {
            x += 6 * textSize; // 간격 조정
        } else {
            matrix.setCursor(x, y);
            matrix.print(text[i]);
            x += 6 * textSize; // 다음 문자 위치
        }
    }
}


void drawImage() {
    int offsetX = 64 - 32; // Panel width - image width
    int offsetY = 32 - 28; // Panel height - image height

    for (int y = 0; y < 32; y++) {
        for (int x = 0; x < 28; x++) {
            uint16_t color = image[y][x];
            matrix.drawPixel(offsetX + x + 5, offsetY + y, color);
        }
    }
}

void loop() {
    matrix.fillScreen(0); // Clear the screen

    // Draw the "GAME" text at (7, 7)
    drawText("AGAIN", 5, 7, 1);

    // Draw the "START" text at (15, 7)
    drawText("START?", 5, 15, 1);

    // Draw the resized image on the bottom right
    drawImage();
    delay(5000);

}
